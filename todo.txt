controls:
figure out max shot_dt cap, if any?

collision:
detect when cannon ball hits ground, destroy terrain within radius
detect when cannon ball hits a cannon, destroy cannon

gameplay:
test shooting with the right cannon
make the game alternate between players' turns/shots

scoring:
store player points
give points when one player shoots another
add font display
show player points using fonts at top of screen

menu:
add simple menu with background picture (screenshot + title ?)
add text box for each option: vs player, vs ai, options, exit

bugs??:
after adding second slope type, game sometimes slow to close

////////////////////////////////////////////////////////////////////////////

terrain generation:
-create flat terrain
-decide how to store terrain info - vector of pixels with x,y, status
-write function to determine if a pixel status based on a slope
-create terrain with one gradual slope
-create terrain with two gradual slopes
-create terrain with four gradual slopes
-create terrain with four slopes with randomized transition positions
-read settings file at startup to determine terrain type and set global var
-use terrain generation type global var to select between diff terrain types

cannons:
-create cannon texture
-draw cannon on screen
-alter texture loading so that it happens during init, not render
-decide how to implement cannon placement, after terrain gen
-implement function to find top ground pixel at given x
-place a cannon that works with terrain gen
-place second cannon that works with terrain gen
-add some randomization to cannon placement
-split cannons into two parts, wheel and cannon barrel texture
-display cannon as wheel background and cannon shaft foreground
-rotate cannon barrel with arrow keys

cannon ball:
-create texture
-display ball

physics:
-implement dt
-implement gravity
-test gravity by allowing ball to drop from air

bugs??:
-after holding space for a while to rotate, game is slow to close, is it getting stuck in a loop looking at keys and not seeing escape? was not looping through events, was only checking one event per frame

refactor:
-create cannon class and use two objects in level
-create ball class and use with gravity test

controls:
-record how long user holds space to determine shot force
-have holding space up to 1-3 seconds trigger cannon shot

physics:
-test gravity by simulating fake shot straight into air
-test gravity by simulating fake shot angled into air
-try out range of shots to figure out sane force values

controls:
-have holding space draw enlarging rect to indicate force
-figure out min allowed force to see cannon ball

collision:
-detect when cannon ball hits ground, destroy terrain within radius
