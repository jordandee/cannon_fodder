options:
load current settings at options startup
save current settings when exiting options
create settings file with defaults if it doesn't exist
if settings file has bad settings, set them to defaults and overwrite file

controls:
figure out max shot_dt cap, if any?

polish?:
optimize framerate, preferably 120Hz
rendering terrain loop is very slow because SDL_RenderDrawPoint uses malloc and free every call

bugs??:
after adding second slope type, game sometimes slow to close

compiling:
xcc for windows, mxe cc?
xcc for web js, emscripten?

would be nice:
get ChicagoBold font since I believe that was used in the original game
curvy terrain gen

////////////////////////////////////////////////////////////////////////////

terrain generation:
-create flat terrain
-decide how to store terrain info - vector of pixels with x,y, status
-write function to determine if a pixel status based on a slope
-create terrain with one gradual slope
-create terrain with two gradual slopes
-create terrain with four gradual slopes
-create terrain with four slopes with randomized transition positions
-read settings file at startup to determine terrain type and set global var
-use terrain generation type global var to select between diff terrain types

cannons:
-create cannon texture
-draw cannon on screen
-alter texture loading so that it happens during init, not render
-decide how to implement cannon placement, after terrain gen
-implement function to find top ground pixel at given x
-place a cannon that works with terrain gen
-place second cannon that works with terrain gen
-add some randomization to cannon placement
-split cannons into two parts, wheel and cannon barrel texture
-display cannon as wheel background and cannon shaft foreground
-rotate cannon barrel with arrow keys

cannon ball:
-create texture
-display ball

physics:
-implement dt
-implement gravity
-test gravity by allowing ball to drop from air

bugs??:
-after holding space for a while to rotate, game is slow to close, is it getting stuck in a loop looking at keys and not seeing escape? was not looping through events, was only checking one event per frame

refactor:
-create cannon class and use two objects in level
-create ball class and use with gravity test

controls:
-record how long user holds space to determine shot force
-have holding space up to 1-3 seconds trigger cannon shot

physics:
-test gravity by simulating fake shot straight into air
-test gravity by simulating fake shot angled into air
-try out range of shots to figure out sane force values

controls:
-have holding space draw enlarging rect to indicate force
-figure out min allowed force to see cannon ball

collision:
-detect when cannon ball hits ground, destroy terrain within radius
-detect when cannon ball hits a cannon, destroy cannon

gameplay:
-test shooting with the right cannon
-make the game alternate between players' turns/shots
-make it so you can only shoot opposing cannon

scoring:
-store player points
-give points when one player shoots another
-add font display capability
-find new ttf font that fits the game appropriately
-position <- Score -> correctly at top of screen
-refactor score code into a class
-show player points using fonts at top of screen

gameplay:
-give player 2 his own force rect
-don't let keys move cannons during a live shot
-don't let cannon reshoot when already shooting
-kill a shot if it goes off left or right side of screen
-don't let dead cannon shoot
-regenerate terrain and respawn cannons some time after cannon death

terrain generation:
-create hospital, house and tree textures
-add one hospital to terrain gen
-add second flipped hospital to terrain gen
-figure out how to handle obstacles more easily, vector of obstacle objects?
-add one house to terrain gen, add both
-fix terrain gen so there is always dirt at every y so obstacles don't fail to spawn (add minimum y floor value that has to be dirt)
-add trees to terrain gen
-make # of obstacles based on global settings - trees, houses and hospitals
-make it so trees can spawn overlapping, need transparency
-make it so trees can spawn anywhere regardless of flip setting

gameplay:
-add collisions for hitting other player's buildings
-add points for hitting other player's buildings
-create win/lose battle messages
-create win/lose war messages
-create win/lose scenario, x pts to win

menu:
-create empty menu
-add background screenshot
-add game title
-add simple menu
-add text box for each option: vs player, vs ai, options, exit
-use white outline box to indicate which option is selected
-allow tab and shift tab to select different text boxes
-make each text box work with enter/space
-make each text box work when clicked

options:
-create empty options
-add text box for each label: terrain type, obstacles, wind, fullscreen
-add text box for each label's possible selections
-create outline button function
-highlight current and active selections
-move highlighted selection with wsad/arrows/tab
-allow changing active selection with enter/space
-allow highlighting selections with mouse movement
-allow changing active selection with left mouse click

cleanup:
-separate button code from options screen into its own thing
-integrate button code into title screen

gameplay:
-implement wind
-set wind based on global settings
-implement fullscreen

ai:
-ai first version, just does same shot every time
-randomize shot within particular angle and force range
-update shot force based on where shot landed relative to opponent
-make sure angle and force reset after a cannon death or if hit obstacle, or if stalling

bugs??:
-fixed: player can kill self sometimes
